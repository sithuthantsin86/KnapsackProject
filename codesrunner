#                          #
# My Program Runner Script #
#                          #
clear
echo "$(tput setaf 1)%%%%%%%%% Starting Script %%%%%%%%%$(tput sgr0)"
#
#
# Folder Creation
#
if [ ! -d "RESULTS" ]; then
mkdir RESULTS
fi
#
#
# Old file for UC will be delete if needed
#
#if [ -f RESULTS/UC_Results.xls ]; then
#rm RESULTS/UC_Results.xls
#fi
#
#
# For solving UC
#
#echo -e "Table based runtime\tTable based parallel runtime with 2 threads\tTable based parallel runtime with 4 threads\tDynamic programming with array runtime\tAdded steps\tMerged steps\tDynamic programming with UB1\tAdded steps\tMerged steps\tDynamic programming with UB2\tAdded steps\tMerged steps\tMaximum profit\tMaximum Capacity" >> RESULTS/UC_Results.xls
#set counta = 1
#for file in inputs/UC/*
#do
# counta= `expr $counta + 1`
# echo -n -e $counta"\t" >> RESULTS/UC_Results.xls
# ./3 $file >> RESULTS/UC_Results.xls
# ./4 $file 2 >> RESULTS/UC_Results.xls
# ./4 $file 4 >> RESULTS/UC_Results.xls
# ./5 $file >> RESULTS/UC_Results.xls
# ./6 $file 1 >> RESULTS/UC_Results.xls
# ./6 $file 2 >> RESULTS/UC_Results.xls
#done
#echo "UC Done"
#
#
# Old file for WC will be delete if needed
#
if [ -f RESULTS/WC_Results.xls ]; then
rm RESULTS/WC_Results.xls
fi
#
#
# For solving WC
#
echo -e "Table based runtime\tTable based parallel runtime with 2 threads\tTable based parallel runtime with 4 threads\tDynamic programming with array runtime\tAdded steps\tMerged steps\tDynamic programming with UB1\tAdded steps\tMerged steps\tDynamic programming with UB2\tAdded steps\tMerged steps\tMaximum profit\tMaximum Capacity" >> RESULTS/WC_Results.xls
set countb = 1
for file in inputs/WC/*
do
# countb=`expr $countb + 1`
# echo -n -e $countb"\t" >> RESULTS/WC_Results.xls
 ./3 $file >> RESULTS/WC_Results.xls
 ./4 $file 2 >> RESULTS/WC_Results.xls
 ./4 $file 4 >> RESULTS/WC_Results.xls
 ./5 $file >> RESULTS/WC_Results.xls
 ./6 $file 1 >> RESULTS/WC_Results.xls
 ./6 $file 2 >> RESULTS/WC_Results.xls
done
echo "WC Done"
#
#
# Old file for SC will be delete if needed
#
if [ -f RESULTS/SC_Results.xls ]; then
rm RESULTS/SC_Results.xls
fi
#
#
# For solving SC
#
echo -e "Table based runtime\tTable based parallel runtime with 2 threads\tTable based parallel runtime with 4 threads\tDynamic programming with array runtime\tAdded steps\tMerged steps\tDynamic programming with UB1\tAdded steps\tMerged steps\tDynamic programming with UB2\tAdded steps\tMerged steps\tMaximum profit\tMaximum Capacity" >> RESULTS/SC_Results.xls
set countc = 1
for file in inputs/SC/*
do
# countc=`expr $countc + 1`
# echo -n -e $countc"\t" >> RESULTS/SC_Results.xls
 ./3 $file >> RESULTS/SC_Results.xls
 ./4 $file 2 >> RESULTS/SC_Results.xls
 ./4 $file 4 >> RESULTS/SC_Results.xls
 ./5 $file >> RESULTS/SC_Results.xls
 ./6 $file 1 >> RESULTS/SC_Results.xls
 ./6 $file 2 >> RESULTS/SC_Results.xls
done
echo "SC Done"
#
#
# Old file for ISC will be delete if needed
#
#if [ -f RESULTS/ISC_Results.xls ]; then
#rm RESULTS/ISC_Results.xls
#fi
#
#
# For solving ISC
#
#echo "Instance_numbers DP_runtimes List_runtimes" >> RESULTS/ISC_Results.xls
#set countd = 1
#for file in ISC/*
#do
# countd=`expr $countd + 1`
# echo -n $countd" " >> RESULTS/ISC_Results.xls
# ./solver $file >> RESULTS/ISC_Results.xls
#done
#
#
# Old file for ASC will be delete if needed
#
#if [ -f RESULTS/ASC_Results.xls ]; then
#rm RESULTS/ASC_Results.xls
#fi
#
#
# For solving ASC
#
#echo "Instance_numbers DP_runtimes List_runtimes" >> RESULTS/ASC_Results.xls
#set counte = 1
#for file in ASC/*
#do
# counte=`expr $counte + 1`
# echo -n $counte" " >> RESULTS/ASC_Results.xls
# ./solver $file >> RESULTS/ASC_Results.xls
#done
#
#
# Old file for SS will be delete if needed
# 
#if [ -f RESULTS/SS_Results.xls ]; then
#rm RESULTS/SS_Results.xls
#fi
#
#
# For solving SS
#
#echo "Instance_numbers DP_runtimes List_runtimes" >> RESULTS/SS_Results.xls
#set countf = 1
#for file in SS/*
#do
# countf=`expr $countf + 1`
# echo -n $countf" " >> RESULTS/SS_Results.xls
# ./solver $file >> RESULTS/SS_Results.xls
#done
#
#
# Old file for UCS will be delete if needed
#
#if [ -f RESULTS/UCS_Results.xls ]; then
#rm RESULTS/UCS_Results.xls
#fi
#
#
# For solving UCS
#
#echo "Instance_numbers DP_runtimes List_runtimes" >> RESULTS/UCS_Results.xls
#set countg = 1
#for file in UCS/*
#do
# countg=`expr $countg + 1`
# echo -n $countg" " >> RESULTS/UCS_Results.xls
# ./solver $file >> RESULTS/UCS_Results.xls
#done
#
#
#
echo -e "\nEnd.\n"